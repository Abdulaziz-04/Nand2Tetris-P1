// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise
        ng; // 1 if (out < 0),  0 otherwise

    PARTS:
   // Put you code here:
   //Here selector will decide the requirement 
   //we will select from a or b first 
   // then we will negate the outcome 
   //and select which one is required
   Mux16(a=x,b[0..15]=false,sel=zx,out=zerox);
   Not16(in=zerox,out=nzerox);
   Mux16(a=zerox,b=nzerox,sel=nx,out=finalx);
   //Same for y
   Mux16(a=y,b[0..15]=false,sel=zy,out=zeroy);
   Not16(in=zeroy,out=nzeroy);
   Mux16(a=zeroy,b=nzeroy,sel=ny,out=finaly);
   //Perform x+y and x|y and then select
   Add16(a=finalx,b=finaly,out=xAddy);
   And16(a=finalx,b=finaly,out=xAndy);
   Mux16(a=xAndy,b=xAddy,sel=f,out=fxy);
   //negate the o/p
   Not16(in=fxy,out=nfxy);
   Mux16(a=fxy,b=nfxy,sel=no,out=out,out[15]=res,out[0..7]=l,out[8..15]=r);
   //Or16way will tell us if result is zero or not
   Or8Way(in=l,out=z1);
   Or8Way(in=r,out=z2);
   Or(a=z1,b=z2,out=zres);
   //negation of result sets value of zr
   Not(in=zres,out=zr);
   //15th bit decides the value being negative so..
   And(a=res,b=true,out=ng);

}
